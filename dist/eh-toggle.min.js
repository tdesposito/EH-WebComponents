// This file is part of EH-WebComponents, Copyright (C) Todd D. Esposito 2021.
// Distributed under the MIT License (see https://opensource.org/licenses/MIT).
window.customElements.define("eh-toggle",class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.onClick=this.onClick.bind(this);let e=this.hasAttribute("checked")?"checked":"",t=this.hasAttribute("disabled")?"disabled":"",o=this.hasAttribute("rounded")?"rounded":"";this.shadowRoot.innerHTML=`<style>#wrapper{display:inline-block;height:var(--toggle-height,28px);position:relative;width:calc(2 * var(--toggle-height,28px))}#wrapper input{display:none}.toggle{background-color:rgb(var(--toggle_unchecked-background-color,127 127 127));bottom:0;cursor:pointer;left:0;position:absolute;right:0;top:0;transition:var(--toggle-transition-time,.25s)}.toggle:before{background-color:rgb(var(--button-color,255 255 255));bottom:calc((var(--toggle-height,28px) - var(--button-size,calc(var(--toggle-height,28px) - 6px)))/ 2);content:var(--toggle_unchecked-content, "");font-size:smaller;height:var(--button-size,calc(var(--toggle-height,28px) - 6px));left:calc((var(--toggle-height,28px) - var(--button-size,calc(var(--toggle-height,28px) - 6px)))/ 2);position:absolute;transition:var(--toggle-transition-time,.25s);width:var(--button-size,calc(var(--toggle-height,28px) - 6px))}.toggle.rounded{border-radius:var(--toggle-height,28px)}.toggle.rounded:before{border-radius:50%}input:checked+.toggle{background-color:rgb(var(--toggle_checked-background-color,0 178 0))}input:checked+.toggle:before{content:var(--toggle_checked-content, "");transform:translateX(calc(2 * var(--toggle-height,28px) - var(--button-size,calc(var(--toggle-height,28px) - 6px)) - (var(--toggle-height,28px) - var(--button-size,calc(var(--toggle-height,28px) - 6px)))))}input:disabled+.toggle{background-color:rgb(var(--toggle_disabled-background-color,100 100 100));cursor:auto}input:disabled+.toggle:before{content:var(--toggle_disabled-content, "")}</style><label id="wrapper"><input type="checkbox" ${e} ${t}> <span class="toggle ${o}"></span></label>`,this.chkbox=this.shadowRoot.querySelector("#wrapper input")}get checked(){return this.chkbox.checked}set checked(e){if(this.chkbox.checked=Boolean(e),this.getAttribute("onChange")){let e;try{e=Function(this.getAttribute("onChange")),e()}catch(e){console.error("eh-toggle: can't execute the 'onChange' routine.")}}this.dispatchEvent(new Event("change",{bubbles:!0}))}get disabled(){return this.chkbox.disabled}set disabled(e){this.chkbox.disabled=Boolean(e)}get rounded(){return this.rounded}set rounded(e){e?this.shadowRoot.querySelector(".toggle").classList.add("rounded"):this.shadowRoot.querySelector(".toggle").classList.remove("rounded")}onClick(e){this.checked=e.currentTarget.checked}attributeChangedCallback(e,t,o){switch(e){case"checked":this.checked=o;break;case"disabled":this.disabled=o;break;case"rounded":this.rounded=o}}connectedCallback(){this.hasAttribute("checked")&&(this.chkbox.checked=!0),this.hasAttribute("disabled")&&(this.chkbox.disabled=!0),this.hasAttribute("rounded")&&this.shadowRoot.querySelector(".toggle").classList.add("rounded"),this.chkbox.addEventListener("change",this.onClick)}disconnectedCallback(){this.chkbox.removeEventListener("change",this.onClick)}static get observedAttributes(){return["checked","disabled","rounded"]}});